name: Get Release File

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ARTIFACT_NAME: test
      FILE_NAME: test.txt
      OWNER: awesomel-es
      REPO: slave-repository
      TAG: latest # Could be optional
    steps:
      - name: Find Release URL
        id: find-release-url
        run: |
          # Get the latest Release url
          RELEASE_URL=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.API_GH_TK }}" \
            "https://api.github.com/repos/${{ env.OWNER }}/${{ env.REPO }}/releases/latest" | jq -r '.url')

          echo "release_url=$RELEASE_URL" >> "$GITHUB_OUTPUT"

      - name: Find Asset ID
        id: find-asset-id
        run: |
          # Get the Asset ID by the filename
          ASSET_ID=$(curl -s -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.API_GH_TK }}" \
          "${{ steps.find-release-url.outputs.release_url }}/assets" | jq -r ".[] | select(.name == \"${{ env.ARTIFACT_NAME }}\") | .id")

          echo "asset_id=$ASSET_ID" >> "$GITHUB_OUTPUT"
        
      - name: Download Asset
        run: |
          # Download the asset's binary content
          curl -LOJ -H "Accept: application/octet-stream" \
            -H "Authorization: Bearer ${{ secrets.API_GH_TK }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ env.OWNER }}/${{ env.REPO }}/releases/assets/${{ steps.find-asset-id.outputs.asset_id }}"

      - name: Echoing files
        run: ls -la